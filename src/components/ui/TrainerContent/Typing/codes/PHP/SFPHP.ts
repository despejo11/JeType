import { TPHPOne, TPHPTwo, TPHPThree } from './types'

export const SFPHP: {
  PHPOne: TPHPOne
  PHPTwo: TPHPTwo
  PHPThree: TPHPThree
} = {
  PHPOne: {
    1: `<?php echo (function($a) { $b = "apple" $c = rand(1, 100) ?>`,
    2: `$arr = array(1, 2, 3, 4, 5) $x = array_sum($arr)`,
    3: `$y = $x * 10 if ($y > 50) { $z = "big" } else { $z = "small" }`,
    4: `while ($x < 100) { $x += 5 $y = rand(1, 3) }`,
    5: `$a = $b . "test" $b = strlen($a) $c = array_reverse($arr)`,
    6: `$d = count($arr) $e = $d * 2 foreach($arr as $val) { echo $val }`,
    7: `$f = $e + $c[0] $g = sqrt($f) $h = round($g, 2)`,
    8: `function multiply($x, $y) { return $x * $y } $i = multiply(3, 5)`,
    9: `$j = $i + rand(10, 20) $k = isset($arr[3]) ? $arr[3] : 0`,
    10: `$l = $k + $j if ($l > 50) { $m = "over" } else { $m = "under" }`,
    11: `$n = array_map('strtoupper', $arr) $o = implode('-', $n)`,
    12: `$p = pow(2, 5) $q = $p / 10 $r = floor($q)`,
    13: `for ($s = 0 $s < 10 $s++) { $t = rand(1, 100) $u = $t * 2 }`,
    14: `$v = $u + $r $w = max($v, 10) $x = min($w, 100)`,
    15: `$y = "Hello " . $m . " " . $x $z = strpos($y, "Hello")`,
    16: `$aa = str_replace("Hello", "Goodbye", $y) $ab = strrev($aa)`,
    17: `$ac = explode(" ", $ab) $ad = implode(",", $ac)`,
    18: `$ae = rand(1, 1000) $af = $ae % 2 == 0 ? "even" : "odd"`,
    19: `$ag = $af === "even" ? "Divisible" : "Not Divisible"`,
    20: `$ah = isset($ac[2]) ? $ac[2] : "default" $ai = strtoupper($ah)`,
    21: `$aj = $ai . " " . rand(1, 999) $ak = str_pad($aj, 20, "*")`,
    22: `$al = chr(65) $am = ord($al) $an = chr($am + 1)`,
    23: `$ao = substr($an, 0, 1) $ap = $ao . "_end"`,
    24: `$aq = file_exists("file.txt") ? "exists" : "not found"`,
    25: `$ar = strtotime("now") $as = date("Y-m-d", $ar)`,
  },
  PHPTwo: {
    1: `<?php $a = rand(1, 100) $b = "test" if($a > 50) { $c = "high" } ?>`,
    2: `$d = ["apple", "banana", "cherry"] $e = count($d)`,
    3: `$f = implode(", ", $d) $g = explode(", ", $f)`,
    4: `while($e < 10) { $e++ $h = $e * 2 }`,
    5: `$i = $a % 2 == 0 ? "even" : "odd" $j = $b . $i`,
    6: `foreach($d as $fruit) { $k = strtoupper($fruit) echo $k }`,
    7: `$l = rand(1, 10) $m = $l ** 3 $n = sqrt($m)`,
    8: `function test($x, $y) { return $x + $y } $o = test(5, 7)`,
    9: `$p = pow(10, 2) $q = $p / 5 $r = round($q)`,
    10: `$s = file_get_contents("file.txt") $t = strtoupper($s)`,
    11: `$u = array_map('strtoupper', $d) $v = implode(", ", $u)`,
    12: `$w = rand(1, 100) $x = $w + 10 $y = $x * 3`,
    13: `for($z = 0 $z < 5 $z++) { $aa = rand(1, 10) $bb = $aa * 2 }`,
    14: `$cc = $bb - 5 $dd = $cc + 7 $ee = $dd * 3`,
    15: `$ff = file_exists("file.txt") ? "exists" : "not found"`,
    16: `$gg = strtotime("next Monday") $hh = date("Y-m-d", $gg)`,
    17: `$ii = strrev("example") $jj = substr($ii, 0, 3)`,
    18: `$kk = array_filter($d, function($item) { return strlen($item) > 5 })`,
    19: `$ll = isset($d[2]) ? $d[2] : "not found" $mm = str_repeat($ll, 3)`,
    20: `$nn = rand(1, 1000) $oo = $nn * 3 $pp = $oo - 100`,
    21: `if ($pp > 500) { $qq = "big" } else { $qq = "small" }`,
    22: `$rr = $qq === "big" ? 100 : 50 $ss = $rr + 25`,
    23: `$tt = abs($ss) $uu = ceil($tt / 2) $vv = floor($uu)`,
    24: `$ww = strpos("hello world", "world") $xx = substr("hello world", $ww)`,
    25: `$yy = json_encode($d) $zz = json_decode($yy)`,
  },
  PHPThree: {
    1: `<?php $a = rand(1, 100) $b = "hello" $c = strlen($b) ?>`,
    2: `$d = array(1, 2, 3, 4) $e = array_sum($d)`,
    3: `$f = $e * 10 $g = $f / 5 $h = round($g)`,
    4: `for ($i = 0 $i < 10 $i++) { $j = rand(1, 100) $k = $j * 2 }`,
    5: `$l = "world" $m = strrev($l) $n = strtoupper($m)`,
    6: `while ($n !== "DLROW") { $o = strrev($n) $n = strtoupper($o) }`,
    7: `$p = strpos($n, "O") $q = substr($n, $p, 2)`,
    8: `function multiply($x, $y) { return $x * $y } $r = multiply(2, 3)`,
    9: `$s = pow(3, 4) $t = sqrt($s) $u = floor($t)`,
    10: `$v = $u + rand(1, 50) $w = max($v, 10)`,
    11: `$x = min($w, 100) $y = "The value is: " . $x`,
    12: `$z = file_exists("test.txt") ? "exists" : "does not exist"`,
    13: `$aa = strtotime("yesterday") $bb = date("Y-m-d", $aa)`,
    14: `$cc = array("apple", "banana", "cherry") $dd = array_reverse($cc)`,
    15: `$ee = count($dd) $ff = $ee * 3`,
    16: `$gg = isset($cc[2]) ? $cc[2] : "default" $hh = str_repeat($gg, 2)`,
    17: `$ii = array_map(function($item) { return strtoupper($item) }, $cc)`,
    18: `$jj = implode(", ", $ii) $kk = explode(", ", $jj)`,
    19: `$ll = rand(1, 1000) $mm = $ll % 2 == 0 ? "even" : "odd"`,
    20: `$nn = $mm === "even" ? "Divisible by 2" : "Not divisible by 2"`,
    21: `$oo = file_get_contents("data.txt") $pp = strtoupper($oo)`,
    22: `$qq = substr($pp, 0, 5) $rr = str_replace("hello", "world", $qq)`,
    23: `$ss = json_encode($cc) $tt = json_decode($ss)`,
    24: `$uu = date("H:i:s") $vv = strtotime($uu)`,
    25: `$ww = str_pad("padding", 20, "-") $xx = strrev($ww)`,
  },
}
